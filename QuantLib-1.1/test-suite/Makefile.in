# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@AUTO_BENCHMARK_FALSE@@BOOST_UNIT_TEST_FOUND_TRUE@bin_PROGRAMS = quantlib-test-suite$(EXEEXT)
@AUTO_BENCHMARK_TRUE@@BOOST_UNIT_TEST_FOUND_TRUE@bin_PROGRAMS = quantlib-test-suite$(EXEEXT) \
@AUTO_BENCHMARK_TRUE@@BOOST_UNIT_TEST_FOUND_TRUE@	quantlib-benchmark$(EXEEXT)
@AUTO_BENCHMARK_FALSE@@BOOST_UNIT_TEST_FOUND_TRUE@noinst_PROGRAMS = quantlib-benchmark$(EXEEXT)
subdir = test-suite
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/ql/config.hpp
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libUnitMain_la_LIBADD =
am__libUnitMain_la_SOURCES_DIST = main.cpp
@BOOST_UNIT_TEST_FOUND_TRUE@am_libUnitMain_la_OBJECTS =  \
@BOOST_UNIT_TEST_FOUND_TRUE@	libUnitMain_la-main.lo
libUnitMain_la_OBJECTS = $(am_libUnitMain_la_OBJECTS)
libUnitMain_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libUnitMain_la_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
@BOOST_UNIT_TEST_FOUND_TRUE@am_libUnitMain_la_rpath =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am__quantlib_benchmark_SOURCES_DIST = quantlibbenchmark.cpp \
	americanoption.hpp americanoption.cpp asianoptions.hpp \
	asianoptions.cpp barrieroption.hpp barrieroption.cpp \
	basketoption.hpp basketoption.cpp batesmodel.hpp \
	batesmodel.cpp convertiblebonds.hpp convertiblebonds.cpp \
	digitaloption.hpp digitaloption.cpp dividendoption.hpp \
	dividendoption.cpp europeanoption.hpp europeanoption.cpp \
	fdheston.hpp fdheston.cpp hestonmodel.hpp hestonmodel.cpp \
	interpolations.hpp interpolations.cpp jumpdiffusion.hpp \
	jumpdiffusion.cpp lowdiscrepancysequences.hpp \
	lowdiscrepancysequences.cpp marketmodel_cms.hpp \
	marketmodel_cms.cpp marketmodel_smm.hpp marketmodel_smm.cpp \
	quantooption.hpp quantooption.cpp riskstats.hpp riskstats.cpp \
	shortratemodels.hpp shortratemodels.cpp utilities.hpp \
	utilities.cpp
am__objects_1 = quantlibbenchmark.$(OBJEXT) americanoption.$(OBJEXT) \
	asianoptions.$(OBJEXT) barrieroption.$(OBJEXT) \
	basketoption.$(OBJEXT) batesmodel.$(OBJEXT) \
	convertiblebonds.$(OBJEXT) digitaloption.$(OBJEXT) \
	dividendoption.$(OBJEXT) europeanoption.$(OBJEXT) \
	fdheston.$(OBJEXT) hestonmodel.$(OBJEXT) \
	interpolations.$(OBJEXT) jumpdiffusion.$(OBJEXT) \
	lowdiscrepancysequences.$(OBJEXT) marketmodel_cms.$(OBJEXT) \
	marketmodel_smm.$(OBJEXT) quantooption.$(OBJEXT) \
	riskstats.$(OBJEXT) shortratemodels.$(OBJEXT) \
	utilities.$(OBJEXT)
@BOOST_UNIT_TEST_FOUND_TRUE@am_quantlib_benchmark_OBJECTS =  \
@BOOST_UNIT_TEST_FOUND_TRUE@	$(am__objects_1)
quantlib_benchmark_OBJECTS = $(am_quantlib_benchmark_OBJECTS)
@BOOST_UNIT_TEST_FOUND_TRUE@quantlib_benchmark_DEPENDENCIES =  \
@BOOST_UNIT_TEST_FOUND_TRUE@	libUnitMain.la \
@BOOST_UNIT_TEST_FOUND_TRUE@	${top_builddir}/ql/libQuantLib.la
quantlib_benchmark_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(quantlib_benchmark_LDFLAGS) $(LDFLAGS) -o $@
am__quantlib_test_suite_SOURCES_DIST = quantlibtestsuite.cpp \
	americanoption.hpp americanoption.cpp array.hpp array.cpp \
	asianoptions.hpp asianoptions.cpp assetswap.hpp assetswap.cpp \
	autocovariances.hpp autocovariances.cpp barrieroption.hpp \
	barrieroption.cpp basketoption.hpp basketoption.cpp \
	batesmodel.hpp batesmodel.cpp bermudanswaption.hpp \
	bermudanswaption.cpp blackdeltacalculator.hpp \
	blackdeltacalculator.cpp bonds.hpp bonds.cpp \
	brownianbridge.hpp brownianbridge.cpp calendars.hpp \
	calendars.cpp capfloor.hpp capfloor.cpp capflooredcoupon.hpp \
	capflooredcoupon.cpp cashflows.hpp cashflows.cpp cdo.hpp \
	cdo.cpp cdsoption.hpp cdsoption.cpp chooseroption.hpp \
	chooseroption.cpp cliquetoption.hpp cliquetoption.cpp cms.hpp \
	cms.cpp commodityunitofmeasure.hpp commodityunitofmeasure.cpp \
	compoundoption.hpp compoundoption.cpp convertiblebonds.hpp \
	convertiblebonds.cpp covariance.hpp covariance.cpp \
	creditdefaultswap.hpp creditdefaultswap.cpp curvestates.hpp \
	curvestates.cpp dates.hpp dates.cpp daycounters.hpp \
	daycounters.cpp defaultprobabilitycurves.hpp \
	defaultprobabilitycurves.cpp digitalcoupon.hpp \
	digitalcoupon.cpp digitaloption.hpp digitaloption.cpp \
	distributions.hpp distributions.cpp dividendoption.hpp \
	dividendoption.cpp europeanoption.hpp europeanoption.cpp \
	everestoption.hpp everestoption.cpp exchangerate.hpp \
	exchangerate.cpp extendedtrees.hpp extendedtrees.cpp \
	factorial.hpp factorial.cpp fastfouriertransform.hpp \
	fastfouriertransform.cpp fdheston.hpp fdheston.cpp \
	fdmlinearop.hpp fdmlinearop.cpp forwardoption.hpp \
	forwardoption.cpp gaussianquadratures.hpp \
	gaussianquadratures.cpp gjrgarchmodel.hpp gjrgarchmodel.cpp \
	hestonmodel.hpp hestonmodel.cpp himalayaoption.hpp \
	himalayaoption.cpp hybridhestonhullwhiteprocess.hpp \
	hybridhestonhullwhiteprocess.cpp inflation.hpp inflation.cpp \
	inflationcapfloor.hpp inflationcapfloor.cpp \
	inflationcapflooredcoupon.hpp inflationcapflooredcoupon.cpp \
	inflationvolatility.hpp inflationvolatility.cpp \
	instruments.hpp instruments.cpp integrals.hpp integrals.cpp \
	interestrates.hpp interestrates.cpp interpolations.hpp \
	interpolations.cpp jumpdiffusion.hpp jumpdiffusion.cpp \
	libormarketmodel.hpp libormarketmodel.cpp \
	libormarketmodelprocess.hpp libormarketmodelprocess.cpp \
	linearleastsquaresregression.hpp \
	linearleastsquaresregression.cpp lookbackoptions.hpp \
	lookbackoptions.cpp lowdiscrepancysequences.hpp \
	lowdiscrepancysequences.cpp margrabeoption.hpp \
	margrabeoption.cpp marketmodel.hpp marketmodel.cpp \
	marketmodel_cms.hpp marketmodel_cms.cpp marketmodel_smm.hpp \
	marketmodel_smm.cpp marketmodel_smmcapletalphacalibration.hpp \
	marketmodel_smmcapletalphacalibration.cpp \
	marketmodel_smmcapletcalibration.hpp \
	marketmodel_smmcapletcalibration.cpp \
	marketmodel_smmcaplethomocalibration.hpp \
	marketmodel_smmcaplethomocalibration.cpp matrices.hpp \
	matrices.cpp mclongstaffschwartzengine.hpp \
	mclongstaffschwartzengine.cpp mersennetwister.hpp \
	mersennetwister.cpp money.hpp money.cpp nthtodefault.hpp \
	nthtodefault.cpp operators.hpp operators.cpp optimizers.hpp \
	optimizers.cpp optionletstripper.hpp optionletstripper.cpp \
	overnightindexedswap.hpp overnightindexedswap.cpp \
	pagodaoption.hpp pagodaoption.cpp pathgenerator.hpp \
	pathgenerator.cpp period.hpp period.cpp \
	piecewiseyieldcurve.hpp piecewiseyieldcurve.cpp \
	quantooption.hpp quantooption.cpp quotes.hpp quotes.cpp \
	rangeaccrual.hpp rangeaccrual.cpp riskstats.hpp riskstats.cpp \
	rngtraits.hpp rngtraits.cpp rounding.hpp rounding.cpp \
	sampledcurve.hpp sampledcurve.cpp shortratemodels.hpp \
	shortratemodels.cpp solvers.hpp solvers.cpp stats.hpp \
	stats.cpp surface.hpp surface.cpp swap.hpp swap.cpp \
	swapforwardmappings.hpp swapforwardmappings.cpp swaption.hpp \
	swaption.cpp swaptionvolatilitycube.hpp \
	swaptionvolatilitycube.cpp swaptionvolatilitymatrix.hpp \
	swaptionvolatilitymatrix.cpp \
	swaptionvolstructuresutilities.hpp termstructures.hpp \
	termstructures.cpp timeseries.hpp timeseries.cpp \
	transformedgrid.hpp transformedgrid.cpp \
	tqreigendecomposition.hpp tqreigendecomposition.cpp \
	tracing.hpp tracing.cpp utilities.hpp utilities.cpp \
	variancegamma.hpp variancegamma.cpp varianceoption.hpp \
	varianceoption.cpp varianceswaps.hpp varianceswaps.cpp \
	volatilitymodels.hpp volatilitymodels.cpp
am__objects_2 = quantlibtestsuite.$(OBJEXT) americanoption.$(OBJEXT) \
	array.$(OBJEXT) asianoptions.$(OBJEXT) assetswap.$(OBJEXT) \
	autocovariances.$(OBJEXT) barrieroption.$(OBJEXT) \
	basketoption.$(OBJEXT) batesmodel.$(OBJEXT) \
	bermudanswaption.$(OBJEXT) blackdeltacalculator.$(OBJEXT) \
	bonds.$(OBJEXT) brownianbridge.$(OBJEXT) calendars.$(OBJEXT) \
	capfloor.$(OBJEXT) capflooredcoupon.$(OBJEXT) \
	cashflows.$(OBJEXT) cdo.$(OBJEXT) cdsoption.$(OBJEXT) \
	chooseroption.$(OBJEXT) cliquetoption.$(OBJEXT) cms.$(OBJEXT) \
	commodityunitofmeasure.$(OBJEXT) compoundoption.$(OBJEXT) \
	convertiblebonds.$(OBJEXT) covariance.$(OBJEXT) \
	creditdefaultswap.$(OBJEXT) curvestates.$(OBJEXT) \
	dates.$(OBJEXT) daycounters.$(OBJEXT) \
	defaultprobabilitycurves.$(OBJEXT) digitalcoupon.$(OBJEXT) \
	digitaloption.$(OBJEXT) distributions.$(OBJEXT) \
	dividendoption.$(OBJEXT) europeanoption.$(OBJEXT) \
	everestoption.$(OBJEXT) exchangerate.$(OBJEXT) \
	extendedtrees.$(OBJEXT) factorial.$(OBJEXT) \
	fastfouriertransform.$(OBJEXT) fdheston.$(OBJEXT) \
	fdmlinearop.$(OBJEXT) forwardoption.$(OBJEXT) \
	gaussianquadratures.$(OBJEXT) gjrgarchmodel.$(OBJEXT) \
	hestonmodel.$(OBJEXT) himalayaoption.$(OBJEXT) \
	hybridhestonhullwhiteprocess.$(OBJEXT) inflation.$(OBJEXT) \
	inflationcapfloor.$(OBJEXT) \
	inflationcapflooredcoupon.$(OBJEXT) \
	inflationvolatility.$(OBJEXT) instruments.$(OBJEXT) \
	integrals.$(OBJEXT) interestrates.$(OBJEXT) \
	interpolations.$(OBJEXT) jumpdiffusion.$(OBJEXT) \
	libormarketmodel.$(OBJEXT) libormarketmodelprocess.$(OBJEXT) \
	linearleastsquaresregression.$(OBJEXT) \
	lookbackoptions.$(OBJEXT) lowdiscrepancysequences.$(OBJEXT) \
	margrabeoption.$(OBJEXT) marketmodel.$(OBJEXT) \
	marketmodel_cms.$(OBJEXT) marketmodel_smm.$(OBJEXT) \
	marketmodel_smmcapletalphacalibration.$(OBJEXT) \
	marketmodel_smmcapletcalibration.$(OBJEXT) \
	marketmodel_smmcaplethomocalibration.$(OBJEXT) \
	matrices.$(OBJEXT) mclongstaffschwartzengine.$(OBJEXT) \
	mersennetwister.$(OBJEXT) money.$(OBJEXT) \
	nthtodefault.$(OBJEXT) operators.$(OBJEXT) \
	optimizers.$(OBJEXT) optionletstripper.$(OBJEXT) \
	overnightindexedswap.$(OBJEXT) pagodaoption.$(OBJEXT) \
	pathgenerator.$(OBJEXT) period.$(OBJEXT) \
	piecewiseyieldcurve.$(OBJEXT) quantooption.$(OBJEXT) \
	quotes.$(OBJEXT) rangeaccrual.$(OBJEXT) riskstats.$(OBJEXT) \
	rngtraits.$(OBJEXT) rounding.$(OBJEXT) sampledcurve.$(OBJEXT) \
	shortratemodels.$(OBJEXT) solvers.$(OBJEXT) stats.$(OBJEXT) \
	surface.$(OBJEXT) swap.$(OBJEXT) swapforwardmappings.$(OBJEXT) \
	swaption.$(OBJEXT) swaptionvolatilitycube.$(OBJEXT) \
	swaptionvolatilitymatrix.$(OBJEXT) termstructures.$(OBJEXT) \
	timeseries.$(OBJEXT) transformedgrid.$(OBJEXT) \
	tqreigendecomposition.$(OBJEXT) tracing.$(OBJEXT) \
	utilities.$(OBJEXT) variancegamma.$(OBJEXT) \
	varianceoption.$(OBJEXT) varianceswaps.$(OBJEXT) \
	volatilitymodels.$(OBJEXT)
@BOOST_UNIT_TEST_FOUND_TRUE@am_quantlib_test_suite_OBJECTS =  \
@BOOST_UNIT_TEST_FOUND_TRUE@	$(am__objects_2)
quantlib_test_suite_OBJECTS = $(am_quantlib_test_suite_OBJECTS)
@BOOST_UNIT_TEST_FOUND_TRUE@quantlib_test_suite_DEPENDENCIES =  \
@BOOST_UNIT_TEST_FOUND_TRUE@	libUnitMain.la \
@BOOST_UNIT_TEST_FOUND_TRUE@	${top_builddir}/ql/libQuantLib.la
quantlib_test_suite_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(quantlib_test_suite_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/ql
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libUnitMain_la_SOURCES) $(quantlib_benchmark_SOURCES) \
	$(quantlib_test_suite_SOURCES)
DIST_SOURCES = $(am__libUnitMain_la_SOURCES_DIST) \
	$(am__quantlib_benchmark_SOURCES_DIST) \
	$(am__quantlib_test_suite_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BOOST_INCLUDE = @BOOST_INCLUDE@
BOOST_LIB = @BOOST_LIB@
BOOST_UNIT_TEST_DEFINE = @BOOST_UNIT_TEST_DEFINE@
BOOST_UNIT_TEST_LIB = @BOOST_UNIT_TEST_LIB@
BOOST_UNIT_TEST_MAIN_CXXFLAGS = @BOOST_UNIT_TEST_MAIN_CXXFLAGS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOXYGEN = @DOXYGEN@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
DVIPS = @DVIPS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EMACS = @EMACS@
EMACSLOADPATH = @EMACSLOADPATH@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LATEX = @LATEX@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINDEX = @MAKEINDEX@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PDFLATEX = @PDFLATEX@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
lispdir = @lispdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
QL_TESTS = \
	quantlibtestsuite.cpp \
	americanoption.hpp americanoption.cpp \
	array.hpp array.cpp \
	asianoptions.hpp asianoptions.cpp \
	assetswap.hpp assetswap.cpp \
	autocovariances.hpp autocovariances.cpp \
	barrieroption.hpp barrieroption.cpp \
	basketoption.hpp basketoption.cpp \
	batesmodel.hpp batesmodel.cpp \
	bermudanswaption.hpp bermudanswaption.cpp \
	blackdeltacalculator.hpp blackdeltacalculator.cpp \
	bonds.hpp bonds.cpp \
	brownianbridge.hpp brownianbridge.cpp \
	calendars.hpp calendars.cpp \
	capfloor.hpp capfloor.cpp \
	capflooredcoupon.hpp capflooredcoupon.cpp \
	cashflows.hpp cashflows.cpp \
	cdo.hpp cdo.cpp \
	cdsoption.hpp cdsoption.cpp \
	chooseroption.hpp chooseroption.cpp \
	cliquetoption.hpp cliquetoption.cpp \
	cms.hpp cms.cpp \
	commodityunitofmeasure.hpp commodityunitofmeasure.cpp \
	compoundoption.hpp compoundoption.cpp \
	convertiblebonds.hpp convertiblebonds.cpp \
	covariance.hpp covariance.cpp \
	creditdefaultswap.hpp creditdefaultswap.cpp \
	curvestates.hpp curvestates.cpp \
	dates.hpp dates.cpp \
	daycounters.hpp daycounters.cpp \
	defaultprobabilitycurves.hpp defaultprobabilitycurves.cpp \
	digitalcoupon.hpp digitalcoupon.cpp \
	digitaloption.hpp digitaloption.cpp \
	distributions.hpp distributions.cpp \
	dividendoption.hpp dividendoption.cpp \
	europeanoption.hpp europeanoption.cpp \
	everestoption.hpp everestoption.cpp \
	exchangerate.hpp exchangerate.cpp \
	extendedtrees.hpp extendedtrees.cpp \
	factorial.hpp factorial.cpp \
	fastfouriertransform.hpp fastfouriertransform.cpp \
	fdheston.hpp fdheston.cpp \
	fdmlinearop.hpp fdmlinearop.cpp \
	forwardoption.hpp forwardoption.cpp \
	gaussianquadratures.hpp gaussianquadratures.cpp \
	gjrgarchmodel.hpp gjrgarchmodel.cpp \
	hestonmodel.hpp hestonmodel.cpp \
	himalayaoption.hpp himalayaoption.cpp \
	hybridhestonhullwhiteprocess.hpp hybridhestonhullwhiteprocess.cpp \
	inflation.hpp inflation.cpp \
	inflationcapfloor.hpp inflationcapfloor.cpp \
	inflationcapflooredcoupon.hpp inflationcapflooredcoupon.cpp \
	inflationvolatility.hpp inflationvolatility.cpp \
	instruments.hpp instruments.cpp \
	integrals.hpp integrals.cpp \
	interestrates.hpp interestrates.cpp \
	interpolations.hpp interpolations.cpp \
	jumpdiffusion.hpp jumpdiffusion.cpp \
	libormarketmodel.hpp libormarketmodel.cpp \
	libormarketmodelprocess.hpp libormarketmodelprocess.cpp \
	linearleastsquaresregression.hpp linearleastsquaresregression.cpp \
	lookbackoptions.hpp lookbackoptions.cpp \
	lowdiscrepancysequences.hpp lowdiscrepancysequences.cpp \
	margrabeoption.hpp margrabeoption.cpp \
	marketmodel.hpp marketmodel.cpp \
	marketmodel_cms.hpp marketmodel_cms.cpp \
	marketmodel_smm.hpp marketmodel_smm.cpp \
	marketmodel_smmcapletalphacalibration.hpp marketmodel_smmcapletalphacalibration.cpp \
	marketmodel_smmcapletcalibration.hpp marketmodel_smmcapletcalibration.cpp \
	marketmodel_smmcaplethomocalibration.hpp marketmodel_smmcaplethomocalibration.cpp \
	matrices.hpp matrices.cpp \
	mclongstaffschwartzengine.hpp mclongstaffschwartzengine.cpp \
	mersennetwister.hpp mersennetwister.cpp \
	money.hpp money.cpp \
	nthtodefault.hpp nthtodefault.cpp \
	operators.hpp operators.cpp \
	optimizers.hpp optimizers.cpp \
	optionletstripper.hpp optionletstripper.cpp \
	overnightindexedswap.hpp overnightindexedswap.cpp \
	pagodaoption.hpp pagodaoption.cpp \
	pathgenerator.hpp pathgenerator.cpp \
	period.hpp period.cpp \
	piecewiseyieldcurve.hpp piecewiseyieldcurve.cpp \
	quantooption.hpp quantooption.cpp \
	quotes.hpp quotes.cpp \
	rangeaccrual.hpp rangeaccrual.cpp \
	riskstats.hpp riskstats.cpp \
	rngtraits.hpp rngtraits.cpp \
	rounding.hpp rounding.cpp \
	sampledcurve.hpp sampledcurve.cpp \
	shortratemodels.hpp shortratemodels.cpp \
	solvers.hpp solvers.cpp \
	stats.hpp stats.cpp \
	surface.hpp surface.cpp \
	swap.hpp swap.cpp \
	swapforwardmappings.hpp swapforwardmappings.cpp \
	swaption.hpp swaption.cpp \
	swaptionvolatilitycube.hpp swaptionvolatilitycube.cpp \
	swaptionvolatilitymatrix.hpp swaptionvolatilitymatrix.cpp \
	swaptionvolstructuresutilities.hpp \
	termstructures.hpp termstructures.cpp \
	timeseries.hpp timeseries.cpp \
	transformedgrid.hpp transformedgrid.cpp \
	tqreigendecomposition.hpp tqreigendecomposition.cpp \
	tracing.hpp tracing.cpp \
	utilities.hpp utilities.cpp \
	variancegamma.hpp variancegamma.cpp \
	varianceoption.hpp varianceoption.cpp \
	varianceswaps.hpp varianceswaps.cpp \
	volatilitymodels.hpp volatilitymodels.cpp

QL_BENCHMARKS = \
	quantlibbenchmark.cpp \
	americanoption.hpp americanoption.cpp \
	asianoptions.hpp asianoptions.cpp \
	barrieroption.hpp barrieroption.cpp \
	basketoption.hpp basketoption.cpp \
	batesmodel.hpp batesmodel.cpp \
	convertiblebonds.hpp convertiblebonds.cpp \
	digitaloption.hpp digitaloption.cpp \
	dividendoption.hpp dividendoption.cpp \
	europeanoption.hpp europeanoption.cpp \
	fdheston.hpp fdheston.cpp \
	hestonmodel.hpp hestonmodel.cpp \
	interpolations.hpp interpolations.cpp \
	jumpdiffusion.hpp jumpdiffusion.cpp \
	lowdiscrepancysequences.hpp lowdiscrepancysequences.cpp \
	marketmodel_cms.hpp marketmodel_cms.cpp \
	marketmodel_smm.hpp marketmodel_smm.cpp \
	quantooption.hpp quantooption.cpp \
	riskstats.hpp riskstats.cpp \
	shortratemodels.hpp shortratemodels.cpp \
	utilities.hpp utilities.cpp

@BOOST_UNIT_TEST_FOUND_TRUE@AM_CPPFLAGS = -I${top_srcdir} -I${top_builddir} ${BOOST_UNIT_TEST_DEFINE}
@BOOST_UNIT_TEST_FOUND_TRUE@noinst_LTLIBRARIES = libUnitMain.la
@BOOST_UNIT_TEST_FOUND_TRUE@libUnitMain_la_SOURCES = main.cpp
@BOOST_UNIT_TEST_FOUND_TRUE@libUnitMain_la_CXXFLAGS = ${BOOST_UNIT_TEST_MAIN_CXXFLAGS}
@BOOST_UNIT_TEST_FOUND_TRUE@quantlib_test_suite_SOURCES = ${QL_TESTS}
@BOOST_UNIT_TEST_FOUND_TRUE@quantlib_test_suite_LDADD = libUnitMain.la ${top_builddir}/ql/libQuantLib.la
@BOOST_UNIT_TEST_FOUND_TRUE@quantlib_test_suite_LDFLAGS = -l${BOOST_UNIT_TEST_LIB}
@BOOST_UNIT_TEST_FOUND_TRUE@quantlib_benchmark_SOURCES = ${QL_BENCHMARKS}
@BOOST_UNIT_TEST_FOUND_TRUE@quantlib_benchmark_LDADD = libUnitMain.la ${top_builddir}/ql/libQuantLib.la
@BOOST_UNIT_TEST_FOUND_TRUE@quantlib_benchmark_LDFLAGS = -l${BOOST_UNIT_TEST_LIB}
@BOOST_UNIT_TEST_FOUND_TRUE@TESTS = quantlib-test-suite$(EXEEXT)
@BOOST_UNIT_TEST_FOUND_TRUE@TESTS_ENVIRONMENT = BOOST_TEST_LOG_LEVEL=message
@BOOST_UNIT_TEST_FOUND_FALSE@EXTRA_DIST = \
@BOOST_UNIT_TEST_FOUND_FALSE@	${QL_TESTS} \
@BOOST_UNIT_TEST_FOUND_FALSE@	quantlibbenchmark.cpp \
@BOOST_UNIT_TEST_FOUND_FALSE@	README.txt \
@BOOST_UNIT_TEST_FOUND_FALSE@	testsuite_vc7.vcproj \
@BOOST_UNIT_TEST_FOUND_FALSE@	testsuite_vc8.vcproj \
@BOOST_UNIT_TEST_FOUND_FALSE@	testsuite_vc9.vcproj \
@BOOST_UNIT_TEST_FOUND_FALSE@	testsuite_vc10.vcxproj \
@BOOST_UNIT_TEST_FOUND_FALSE@	testsuite_vc10.vcxproj.filters \
@BOOST_UNIT_TEST_FOUND_FALSE@	testsuite.dev

@BOOST_UNIT_TEST_FOUND_TRUE@EXTRA_DIST = \
@BOOST_UNIT_TEST_FOUND_TRUE@	README.txt \
@BOOST_UNIT_TEST_FOUND_TRUE@	testsuite_vc7.vcproj \
@BOOST_UNIT_TEST_FOUND_TRUE@	testsuite_vc8.vcproj \
@BOOST_UNIT_TEST_FOUND_TRUE@	testsuite_vc9.vcproj \
@BOOST_UNIT_TEST_FOUND_TRUE@	testsuite_vc10.vcxproj \
@BOOST_UNIT_TEST_FOUND_TRUE@	testsuite_vc10.vcxproj.filters \
@BOOST_UNIT_TEST_FOUND_TRUE@	testsuite.dev

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign test-suite/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign test-suite/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libUnitMain.la: $(libUnitMain_la_OBJECTS) $(libUnitMain_la_DEPENDENCIES) 
	$(libUnitMain_la_LINK) $(am_libUnitMain_la_rpath) $(libUnitMain_la_OBJECTS) $(libUnitMain_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
quantlib-benchmark$(EXEEXT): $(quantlib_benchmark_OBJECTS) $(quantlib_benchmark_DEPENDENCIES) 
	@rm -f quantlib-benchmark$(EXEEXT)
	$(quantlib_benchmark_LINK) $(quantlib_benchmark_OBJECTS) $(quantlib_benchmark_LDADD) $(LIBS)
quantlib-test-suite$(EXEEXT): $(quantlib_test_suite_OBJECTS) $(quantlib_test_suite_DEPENDENCIES) 
	@rm -f quantlib-test-suite$(EXEEXT)
	$(quantlib_test_suite_LINK) $(quantlib_test_suite_OBJECTS) $(quantlib_test_suite_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/americanoption.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/array.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/asianoptions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/assetswap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/autocovariances.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/barrieroption.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/basketoption.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/batesmodel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bermudanswaption.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blackdeltacalculator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bonds.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/brownianbridge.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/calendars.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/capfloor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/capflooredcoupon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cashflows.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cdo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cdsoption.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/chooseroption.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cliquetoption.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cms.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/commodityunitofmeasure.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/compoundoption.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/convertiblebonds.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/covariance.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/creditdefaultswap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/curvestates.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dates.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/daycounters.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/defaultprobabilitycurves.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/digitalcoupon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/digitaloption.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/distributions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dividendoption.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/europeanoption.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/everestoption.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exchangerate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/extendedtrees.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/factorial.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fastfouriertransform.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fdheston.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fdmlinearop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/forwardoption.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gaussianquadratures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gjrgarchmodel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hestonmodel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/himalayaoption.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hybridhestonhullwhiteprocess.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/inflation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/inflationcapfloor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/inflationcapflooredcoupon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/inflationvolatility.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/instruments.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/integrals.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/interestrates.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/interpolations.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jumpdiffusion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libUnitMain_la-main.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libormarketmodel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libormarketmodelprocess.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/linearleastsquaresregression.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lookbackoptions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lowdiscrepancysequences.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/margrabeoption.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/marketmodel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/marketmodel_cms.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/marketmodel_smm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/marketmodel_smmcapletalphacalibration.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/marketmodel_smmcapletcalibration.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/marketmodel_smmcaplethomocalibration.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/matrices.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mclongstaffschwartzengine.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mersennetwister.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/money.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nthtodefault.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operators.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/optimizers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/optionletstripper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/overnightindexedswap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pagodaoption.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pathgenerator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/period.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/piecewiseyieldcurve.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quantlibbenchmark.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quantlibtestsuite.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quantooption.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quotes.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rangeaccrual.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/riskstats.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rngtraits.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rounding.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sampledcurve.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shortratemodels.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/solvers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stats.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/surface.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/swap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/swapforwardmappings.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/swaption.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/swaptionvolatilitycube.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/swaptionvolatilitymatrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/termstructures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/timeseries.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tqreigendecomposition.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tracing.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/transformedgrid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/utilities.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/variancegamma.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/varianceoption.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/varianceswaps.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/volatilitymodels.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

libUnitMain_la-main.lo: main.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libUnitMain_la_CXXFLAGS) $(CXXFLAGS) -MT libUnitMain_la-main.lo -MD -MP -MF $(DEPDIR)/libUnitMain_la-main.Tpo -c -o libUnitMain_la-main.lo `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libUnitMain_la-main.Tpo $(DEPDIR)/libUnitMain_la-main.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='main.cpp' object='libUnitMain_la-main.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libUnitMain_la_CXXFLAGS) $(CXXFLAGS) -c -o libUnitMain_la-main.lo `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES clean-noinstPROGRAMS ctags dist-hook \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS


dist-hook:
	mkdir -p $(distdir)/build
	mkdir -p $(distdir)/bin
	cp -p $(srcdir)/bin/runtest.bat $(distdir)/bin
	rm -f $(distdir)/main.cpp

@BOOST_UNIT_TEST_FOUND_TRUE@main.cpp: Makefile.am
@BOOST_UNIT_TEST_FOUND_TRUE@	echo "#ifdef BOOST_TEST_DYN_LINK" > $@
@BOOST_UNIT_TEST_FOUND_TRUE@	echo "#include <boost/test/unit_test.hpp>" >> $@
@BOOST_UNIT_TEST_FOUND_TRUE@	echo "#include <boost/test/framework.hpp>" >> $@
@BOOST_UNIT_TEST_FOUND_TRUE@	echo "using namespace boost::unit_test;" >> $@
@BOOST_UNIT_TEST_FOUND_TRUE@	echo "test_suite* init_unit_test_suite(int, char* []);" >> $@
@BOOST_UNIT_TEST_FOUND_TRUE@	echo "bool init_function() {" >> $@
@BOOST_UNIT_TEST_FOUND_TRUE@	echo "framework::master_test_suite().add(init_unit_test_suite(0,0));" >> $@
@BOOST_UNIT_TEST_FOUND_TRUE@	echo "return true;" >> $@
@BOOST_UNIT_TEST_FOUND_TRUE@	echo "}" >> $@
@BOOST_UNIT_TEST_FOUND_TRUE@	echo "int main( int argc, char* argv[] ) {" >> $@
@BOOST_UNIT_TEST_FOUND_TRUE@	echo "return ::boost::unit_test::unit_test_main( &init_function, argc, argv );" >> $@
@BOOST_UNIT_TEST_FOUND_TRUE@	echo "}" >> $@
@BOOST_UNIT_TEST_FOUND_TRUE@	echo "#endif" >> $@

@BOOST_UNIT_TEST_FOUND_TRUE@.PHONY: benchmark
@BOOST_UNIT_TEST_FOUND_TRUE@benchmark: quantlib-benchmark$(EXEEXT)
@BOOST_UNIT_TEST_FOUND_TRUE@	BOOST_TEST_LOG_LEVEL=message ./quantlib-benchmark$(EXEEXT)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
